import java.util.regex.Matcher
import java.util.regex.Pattern

apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "cn.duanyufei.kiwivm"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "v0.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        String version_tag = project.hasProperty("TRAVIS_TAG") ? TRAVIS_TAG : System.getenv("TRAVIS_TAG")
        if (version_tag != null) {
            Pattern pattern = Pattern.compile("v(\\d+)\\.(\\d+)\\.(\\d+)")
            Matcher matcher = pattern.matcher(version_tag)
            if (matcher.find()) {
                String vn = matcher.group(0)
                int v1 = Integer.parseInt(matcher.group(1))
                int v2 = Integer.parseInt(matcher.group(2))
                int v3 = Integer.parseInt(matcher.group(3))
                versionCode v1 * 1000000 + v2 * 1000 + v3 + 1
                versionName vn
            }
        }
    }
    signingConfigs {
        releaseConfig {
            storeFile file("../iseeu.jks")
            storePassword project.hasProperty("KEYSTORE_PWD") ? KEYSTORE_PWD : System.getenv("KEYSTORE_PWD")
            keyAlias project.hasProperty("ALIAS_NAME") ? ALIAS_NAME : System.getenv("ALIAS_NAME")
            keyPassword project.hasProperty("ALIAS_PWD") ? ALIAS_PWD : System.getenv("ALIAS_PWD")
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
            applicationVariants.all { variant ->
                renameAPK(variant, defaultConfig, 'R')
            }
        }
    }
}

def renameAPK(variant, defaultConfig, buildType) {
    variant.outputs.each { output ->
        def formattedDate = new Date().format('yyyyMMdd')

        def file = output.packageApplication.outputFile
        def fileName = "ISeeYou_" + defaultConfig.versionName + ".apk"
        output.packageApplication.outputFile = new File(file.parent, fileName)
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.1.0'
    compile 'com.squareup.okhttp:okhttp:2.7.5'
    compile 'com.squareup.okio:okio:1.11.0'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'com.android.support:design:25.1.0'

    testCompile 'junit:junit:4.12'
}